"use client";

import { useState } from "react";
import { motion } from "framer-motion";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import {
  Upload,
  MessageSquare,
  Calculator,
  DollarSign,
  Moon,
  Sun,
} from "lucide-react";
import { cn } from "@/lib/utils";
import UploadWidget from "@/components/widgets/UploadWidget";
import CurrencyWidget from "@/components/widgets/CurrencyWidget";
import Image from "next/image";


export default function DashboardPage() {
  const [darkMode, setDarkMode] = useState(false);

  // üîπ –ë—ã—Å—Ç—Ä–∞—è, –Ω–æ –ø–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
  const cardVariants = {
    hidden: { opacity: 0, y: 20, scale: 0.98 },
    visible: (i: number) => ({
      opacity: 1,
      y: 0,
      scale: 1,
      transition: {
        delay: i * 0.08, // —á—É—Ç—å –±—ã—Å—Ç—Ä–µ–µ
        duration: 0.3, // –≤–º–µ—Å—Ç–æ 0.5
        ease: [0.4, 0.0, 0.2, 1],
      },
    }),
    hover: {
      scale: 1.008,
      boxShadow: "0 4px 12px rgba(0,0,0,0.05)",
      transition: { duration: 0.15, ease: "easeOut" },
    },
  };

  return (
    <motion.div
      className={cn(
        "min-h-screen p-6 transition-colors duration-300",
        darkMode
          ? "dark bg-background text-foreground"
          : "bg-background text-foreground"
      )}
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
    >
      {/* Header */}
      <motion.header
        className="flex items-center justify-between mb-6"
        initial={{ opacity: 0, y: -10 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.3 }}
      >
        <div className="flex items-center justify-between gap-2" >
          <Image
            src="/logo.png" // –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, /public/logo.png)
            alt="SaveUp Logo"
            width={48}
            height={48}
            priority // –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ä–∞–∑—É (–¥–ª—è –ª–æ–≥–æ—Ç–∏–ø–∞ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)
            // className="h-40 w-40"
          />
        <h1 className="text-2xl font-bold tracking-tight">
          SaveUp Dashboard
        </h1>
        </div>

        <motion.div whileHover={{ rotate: 15 }} whileTap={{ scale: 0.9 }}>
          <Button
            variant="outline"
            size="icon"
            onClick={() => setDarkMode(!darkMode)}
            aria-label="Toggle theme"
          >
            {darkMode ? <Sun size={18} /> : <Moon size={18} />}
          </Button>
        </motion.div>
      </motion.header>

      {/* Dashboard Grid */}
      <div className="grid gap-4 md:grid-cols-3">
        {[
          {
            title: (
              <>
                <MessageSquare className="w-5 h-5 text-primary" />
                AI-—á–∞—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç
              </>
            ),
            content: (
              <>
                <p className="text-sm text-muted-foreground mb-3">
                  –ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å SaveUp ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä:{" "}
                  <em>"–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –º–æ–∏ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è?"</em>
                </p>
                <textarea
                  className="w-full h-24 p-2 border rounded-md bg-muted resize-none"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å..."
                />
                <div className="flex justify-end mt-3">
                  <motion.div whileTap={{ scale: 0.95 }}>
                    <Button>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</Button>
                  </motion.div>
                </div>
              </>
            ),
            span: "col-span-2",
          },
          {
            title: (
              <>
                <DollarSign className="w-5 h-5 text-primary" />
                –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç
              </>
            ),
            content: <CurrencyWidget />,
            span: "",
          },

          ,
          {
            title: (
              <>
                <Upload className="w-5 h-5 text-primary" />
                –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤ (PDF / Excel)
              </>
            ),
            content: <UploadWidget />,
            span: "col-span-3",
          },
          {
            title: (
              <>
                <Calculator className="w-5 h-5 text-primary" />
                –ö—Ä–µ–¥–∏—Ç–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
              </>
            ),
            content: (
              <form className="space-y-2 text-sm">
                <input
                  type="number"
                  placeholder="–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞"
                  className="w-full p-2 border rounded-md bg-muted"
                />
                <input
                  type="number"
                  placeholder="–°—Ä–æ–∫ (–º–µ—Å.)"
                  className="w-full p-2 border rounded-md bg-muted"
                />
                <input
                  type="number"
                  placeholder="–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ (%)"
                  className="w-full p-2 border rounded-md bg-muted"
                />
                <motion.div whileTap={{ scale: 0.95 }}>
                  <Button className="w-full mt-2">–†–∞—Å—Å—á–∏—Ç–∞—Ç—å</Button>
                </motion.div>
              </form>
            ),
            span: "col-span-3 md:col-span-1",
          },
          {
            title: "–°–æ–≤–µ—Ç –æ—Ç AI",
            content: (
              <p className="text-md sm:text-xl text-muted-foreground">
                üí° –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —Å–æ–≤–µ—Ç: –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ª–æ–∂–∏—Ç—å 10% –æ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã –≤
                –¥–µ–ø–æ–∑–∏—Ç ‚Äî –¥–∞–∂–µ –Ω–µ–±–æ–ª—å—à–∏–µ —Å—É–º–º—ã —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –∫–∞–ø–∏—Ç–∞–ª.
              </p>
            ),
            span: "col-span-3 md:col-span-2",
          },
        ].map((card, i) => (
          <motion.div
            key={i}
            variants={cardVariants}
            initial="hidden"
            animate="visible"
            whileHover="hover"
            custom={i}
            className={cn(
              "rounded-xl shadow-md transition-transform duration-200",
              card.span
            )}
          >
            <Card className="h-full">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  {card.title}
                </CardTitle>
              </CardHeader>
              <CardContent>{card.content}</CardContent>
            </Card>
          </motion.div>
        ))}
      </div>
    </motion.div>
  );
}
